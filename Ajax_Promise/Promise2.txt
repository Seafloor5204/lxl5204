Promise 调用链

1. 基于一个Promise对象, 
2. 大致为promise对象的方法then(), 
   方法里返回的参数会传给下一个处理程序.then

3. 处理程序(then)会返回一个promise对象, 所以可以在Promise.then()的基础是再.then()
	 另外, 在处理程序中返回的值(即第二点), 会成为返回的Promise的result, 
	 所以下一个处理程序可以使用
	 
4. 可以把多个处理程序加到同一个Promise对象上, 但这不是调用链
	let Pro = new Promise(function(resolve, reject){});
	pro.then()
	pro.then()
	pro.then()
	它们之前互相独立运行, 里面的值始终为Promise里resolve/reject 传递的值

5. 在处理程序中也可以主动返回一个Promise, 
   后面的程序会等它状态为sellted,后执行
   主动返回的优点， 可以在主动返回的Promise里执行程序,
   来决定返回的值, 返回的值不同, 下面的处理程序接受的值也不同
   
	return new Promise(function(resolve,reject){})
	
6.fetch简介
	1. 向服务器获取信息, let pro = fetch(url)
	
	2. 如果服务器响应了, 会返回一个promise对象， promise对象带有result参数回来
	3. 使用then, 即可调用上面返回的Promise对象的Result参数, 调用该参数的text()/json()方法,
	   将其解析为text/json
	   同时解析成功后, 方法(text/json) 也会返回一个Promise对象,以及result参数
	4. 再次调用then, 则可以使用上面返回promise对象的result参数
	5. 请求 --> 解析 --> 显示, 都会返回一个Promise, 目的是让下一个处理程序, 处理
	
7. 为了好的扩展, 异步行为, 都应该返回Promise

	
